{"version":3,"sources":["webpack:///src/app/data/data.page.html","webpack:///src/app/data/data.page.ts","webpack:///src/app/data/data.module.ts","webpack:///src/app/components/user-bar/user-bar.component.ts","webpack:///src/app/components/user-bar/user-bar.component.html","webpack:///src/app/components/components.module.ts"],"names":["DataPage","api","alertController","modalController","loadingController","util","tab","filterArray","allFilters","status_biomark","filterInputs_alert","moreOptions","loadForms","$event","presentLoading","checked","form","nform","filterBiomark","fillAlertInputs","console","log","i","length","loadStatus","loadBiomarks","title","loadRecomen","get","then","res","subscribe","data","loadFormFilters","setTimeout","getTop","v","dismiss","err","proccessError","create","cssClass","message","loading","present","onDidDismiss","role","index","push","error","item","fd","FormData","formularios","questoes","ordem","header","pergunta","inputs","name","type","placeholder","buttons","text","handler","blah","value","inputOK","append","post_params","presentToast","alert","biomark","post","height","show","status","theNewInputs","label","isMatch","j","component","componentProps","form_type","modal","onWillDismiss","segmentChange","openFilter","selector","templateUrl","styleUrls","formIndex","routes","path","DataPageModule","forChild","imports","declarations","UserBarComponent","storage","modalCtrl","loadUserData","interval","setInterval","user","userData","clearInterval","userEl","ComponentsModule","exports"],"mappings":"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","file":"data-data-module-es5.js","sourcesContent":["<ion-header>\n  <ion-toolbar>\n    <div class=\"toolbar-bg\">\n      <ion-title>\n        <img src=\"../../assets/images/mia-wht.png\" width=\"200\" alt=\"\" />\n      </ion-title>\n\n      <ion-buttons slot=\"end\" class=\"ion-text-right\">\n        <app-user-bar></app-user-bar>\n      </ion-buttons>\n    </div>\n\n    <div\n      class=\"toolbar-bg\"\n      style=\"box-shadow: 0px 0px 0px #00000059 !important\"\n    >\n      <ion-segment\n        color=\"secondary\"\n        (ionChange)=\"segmentChange($event)\"\n        [(ngModel)]=\"tab\"\n      >\n        <ion-segment-button value=\"forms\">FORMULÁRIOS</ion-segment-button>\n        <ion-segment-button value=\"status\">STATUS</ion-segment-button>\n        <ion-segment-button value=\"rec\">RECOMENDAÇÕES</ion-segment-button>\n      </ion-segment>\n    </div>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n    <div *ngIf=\"moreOptions\" class=\"tab-options\">\n      <div *ngIf=\"tab == 'forms'\">\n        <ion-row>\n          <ion-col size=\"3\" (click)=\"open_multiple()\">\n            <img\n              class=\"tab-icon-imgs\"\n              style=\"width: 19px; height: 16px\"\n              src=\"../../assets/images/list-icon.png\"\n            />\n          </ion-col>\n\n          <ion-col size=\"3\" (click)=\"open_binaria()\">\n            <img\n              class=\"tab-icon-imgs\"\n              style=\"width: 20px; height: 20px\"\n              src=\"../../assets/images/binary-icon.png\"\n            />\n          </ion-col>\n\n          <ion-col size=\"3\" (click)=\"open_gestalt()\">\n            <img\n              class=\"tab-icon-imgs\"\n              style=\"width: 16px; height: 20px\"\n              src=\"../../assets/images/photo-icon.png\"\n            />\n          </ion-col>\n\n          <ion-col size=\"3\" (click)=\"open_levels()\">\n            <img\n              class=\"tab-icon-imgs\"\n              style=\"width: 18px; height: 18px\"\n              src=\"../../assets/images/tune-bar-icon.png\"\n            />\n          </ion-col>\n        </ion-row>\n\n        <ion-row>\n          <ion-col size=\"3\" (click)=\"open_multiple()\">\n            <p class=\"tab-p-style\">Múltipla</p>\n          </ion-col>\n\n          <ion-col size=\"3\" (click)=\"open_binaria()\">\n            <p class=\"tab-p-style\">Binária</p>\n          </ion-col>\n\n          <ion-col size=\"3\" (click)=\"open_gestalt()\">\n            <p class=\"tab-p-style\">Gestalt</p>\n          </ion-col>\n\n          <ion-col size=\"3\" (click)=\"open_levels()\">\n            <p class=\"tab-p-style\">Níveis</p>\n          </ion-col>\n        </ion-row>\n      </div>\n\n      <div *ngIf=\"tab == 'status'\">\n        <ion-row>\n          <ion-col size=\"6\" (click)=\"open_patologia()\">\n            <img\n              class=\"tab-icon-imgs\"\n              style=\"width: 16px; height: 18px\"\n              src=\"../../assets/images/bug-report-icon.png\"\n            />\n          </ion-col>\n\n          <ion-col size=\"6\" (click)=\"open_biomarcador()\">\n            <img\n              class=\"tab-icon-imgs\"\n              style=\"width: 16px; height: 16px\"\n              src=\"../../assets/images/bubble-icon.png\"\n            />\n          </ion-col>\n        </ion-row>\n\n        <ion-row>\n          <ion-col size=\"6\" (click)=\"open_patologia()\">\n            <p class=\"tab-p-style\">Patologia</p>\n          </ion-col>\n\n          <ion-col size=\"6\" (click)=\"open_biomarcador()\">\n            <p class=\"tab-p-style\">Biomarcador</p>\n          </ion-col>\n        </ion-row>\n      </div>\n\n      <div *ngIf=\"tab == 'rec'\">\n        <ion-row>\n          <ion-col size=\"3\" (click)=\"open_tratamento()\">\n            <img\n              class=\"tab-icon-imgs\"\n              style=\"width: 20px; height: 20px\"\n              src=\"../../assets/images/spa-icon.png\"\n            />\n          </ion-col>\n\n          <ion-col size=\"3\" (click)=\"open_content()\">\n            <img\n              class=\"tab-icon-imgs\"\n              style=\"width: 20px; height: 16px\"\n              src=\"../../assets/images/movie-icon.png\"\n            />\n          </ion-col>\n\n          <ion-col size=\"3\" (click)=\"open_food()\">\n            <img\n              class=\"tab-icon-imgs\"\n              style=\"width: 22px; height: 19px\"\n              src=\"../../assets/images/cart-icon.png\"\n            />\n          </ion-col>\n\n          <ion-col size=\"3\" (click)=\"open_activity()\">\n            <img\n              class=\"tab-icon-imgs\"\n              style=\"width: 23px; height: 23px\"\n              src=\"../../assets/images/setting-icon.png\"\n            />\n          </ion-col>\n        </ion-row>\n\n        <ion-row>\n          <ion-col size=\"3\" (click)=\"open_tratamento()\">\n            <p class=\"tab-p-style\">Tratamento</p>\n          </ion-col>\n\n          <ion-col size=\"3\" (click)=\"open_content()\">\n            <p class=\"tab-p-style\">Conteúdo</p>\n          </ion-col>\n\n          <ion-col size=\"3\" (click)=\"open_food()\">\n            <p class=\"tab-p-style\">Alimentação</p>\n          </ion-col>\n\n          <ion-col size=\"3\" (click)=\"open_activity()\">\n            <p class=\"tab-p-style\">Atividades</p>\n          </ion-col>\n        </ion-row>\n      </div>\n    </div>\n\n    <div style=\"display: flex\">\n      <ion-fab-button\n        style=\"margin-right: 8px\"\n        (click)=\"(moreOptions)? moreOptions = false : moreOptions = true\"\n        slot=\"fixed\"\n      >\n        <ion-icon name=\"add\"></ion-icon>\n      </ion-fab-button>\n\n      <ion-fab-button (click)=\"openFilter()\">\n        <ion-icon name=\"md-funnel\"></ion-icon>\n      </ion-fab-button>\n    </div>\n  </ion-fab>\n  <div wrap-box>\n    <div *ngIf=\"tab =='rec'\">\n      <ion-grid class=\"ion-no-padding\">\n        <ion-row class=\"sub-toolbar\">\n          <ion-col size=\"8\">\n            <h1>GESTÃO DE RECOMENDAÇÕES</h1>\n            <p>\n              Você é o cientista que define padrões para cuidar de vidas.\n              Obrigado!\n            </p>\n          </ion-col>\n\n          <ion-col size=\"4\">\n            <ion-item lines=\"none\" class=\"search-bar\">\n              <ion-input\n                class=\"search-input\"\n                type=\"text\"\n                placeholder=\"Pesquise uma recomentação...\"\n              >\n                <ion-icon\n                  class=\"searchbar-icon\"\n                  ios=\"ios-search\"\n                  md=\"md-search\"\n                ></ion-icon>\n              </ion-input>\n            </ion-item>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n\n      <ion-list *ngIf=\"allFilters\">\n        <ion-card\n        class=\"data-card\"\n        *ngFor=\"let item of allFilters; let i = index\"\n      >\n        <ion-item class=\"ion-hide-sm-down\">\n          <ion-label *ngIf=\"i === 0\" >\n            <p>Categoria: Tratamento</p>\n\n          </ion-label>\n          <ion-label *ngIf=\"i === 1\" >\n            <p>Categoria: Alimentação</p>\n\n          </ion-label>\n          <ion-label *ngIf=\"i === 2\" >\n            <p>Categoria: Satisfação</p>\n\n          </ion-label>\n          <ion-label *ngIf=\"i === 3\" >\n            <p>Categoria: Atividade</p>\n\n          </ion-label>\n\n        </ion-item>\n\n        <ion-item class=\"ion-hide-sm-up\">\n          <ion-label *ngIf=\"i === 0\" >\n            <p>Categoria: Tratamento</p>\n\n          </ion-label>\n          <ion-label *ngIf=\"i === 1\" >\n            <p>Categoria: Alimentação</p>\n\n          </ion-label>\n          <ion-label *ngIf=\"i === 2\" >\n            <p>Categoria: Satisfação</p>\n\n          </ion-label>\n          <ion-label *ngIf=\"i === 3\" >\n            <p>Categoria: Atividade</p>\n\n          </ion-label>\n        </ion-item>\n\n        <ion-grid fixed>\n          <ion-row>\n            <ion-col\n              size=\"12\"\n              style=\"cursor: pointer\"\n              (click)=\"queryFormIndexRec(item,i)\"\n            >\n              <ion-label class=\"ion-margin-start\">\n                <ion-icon\n                  [name]=\"item.show? 'caret-down-outline':'caret-forward-outline'\"\n                  style=\"margin-right: 10px\"\n                ></ion-icon>\n                Ver Status ({{item.status?.length?\n                item.status?.length:0}})</ion-label\n              >\n            </ion-col>\n          </ion-row>\n\n          <div\n            *ngIf=\"item.status?.length\"\n            class=\"question-div\"\n            [class.opened]=\"item.show\"\n          >\n            <ion-row *ngFor=\"let status of item.status;let i = index\">\n              <ion-col size=\"12\">\n                <ion-item\n                  lines=\"none\"\n                  class=\"ion-hide-sm-down\"\n                  [ngClass]=\"{'item-bg-dark': 0 === i % 2}\"\n                >\n                  <ion-label style=\"max-width: 80px\">\n                    <p>Editar</p>\n                    <ion-icon\n                      name=\"create-outline\"\n                      style=\"font-size: large; color: #ef9e95\"\n                      (click)=\"edit_Rec(item,i)\"\n                    ></ion-icon\n                  ></ion-label>\n                  <ion-label style=\"max-width: 80px\">\n                    <p>Excluir</p>\n                    <ion-icon\n                      name=\"close-outline\"\n                      style=\"font-size: large; color: #ef9e95\"\n                      (click)=\"delRec(item,i)\"\n                    ></ion-icon\n                  ></ion-label>\n                  <ion-label style=\"min-width: 400px;\">\n                    <p>\n                      {{item.titles.categoria}}: <b>{{status.categoria}}</b>\n                    </p>\n                    <p>\n                      {{item.titles.status}}: <b>{{status.status}}</b>\n                    </p>\n                  </ion-label>\n                  <ion-label>\n                    <p>{{item.titles.fileupl}}: <b>{{status.fileupl}}</b></p>\n                    <p>\n                      {{item.titles.ordem}}: <b>{{status.ordem}}</b>\n                    </p></ion-label\n                  >\n\n                  <ion-label>\n\n                    <p>\n                      <b></b></p\n                  ></ion-label> </ion-item\n                ><ion-item\n                  lines=\"none\"\n                  class=\"ion-hide-sm-up\"\n                  [ngClass]=\"{'item-bg-dark': 0 === i % 2}\"\n                >\n                  <ion-label>\n                    <p style=\"display: flex\">\n                      Excluir Questão\n                      <ion-icon\n                        name=\"close-outline\"\n                        style=\"\n                          font-size: large;\n                          margin-left: auto;\n                          color: #ef9e95;\n                        \"\n                        (click)=\"del_multiple(item,i)\"\n                      ></ion-icon>\n                    </p>\n                    <p style=\"display: flex\">\n                      Editar Questão\n                      <ion-icon\n                        name=\"create-outline\"\n                        style=\"\n                          font-size: large;\n                          margin-left: auto;\n                          color: #ef9e95;\n                        \"\n                        (click)=\"edit_multiple(item,i)\"\n                      ></ion-icon>\n                    </p>\n\n                    <p>\n                      {{item.titles.categoria}}: <b>{{status.categoria}}</b>\n                    </p>\n                    <p>\n                      {{item.titles.duration}}: <b>{{status.duration}}</b>\n                    </p>\n                    <p>{{item.titles.fileupl}}: <b>{{status.fileupl}}</b></p>\n                    <p>{{item.titles.ordem}}: <b>{{status.ordem}}</b></p>\n                    <p>\n                      {{item.titles.status}}: <b>{{status.status}}</b>\n                    </p>\n                  </ion-label>\n                </ion-item>\n              </ion-col>\n            </ion-row>\n          </div>\n        </ion-grid>\n      </ion-card>\n      </ion-list>\n\n      <!--\n <ion-card class=\"data-card\">\n        <ion-list>\n          <ion-item lines=\"none\">\n            <ion-label>\n              <h2><strong>Output</strong></h2>\n            </ion-label>\n          </ion-item>\n\n          <ion-item lines=\"none\" class=\"item-bg-dark\">\n            <div style=\"width: 92px\"></div>\n            <ion-label>\n              <p>\n                Categoria\n                <ion-icon\n                  class=\"dropdown-icon\"\n                  name=\"ios-arrow-down\"\n                ></ion-icon>\n              </p>\n            </ion-label>\n            <ion-label>\n              <p>\n                Status\n                <ion-icon\n                  class=\"dropdown-icon\"\n                  name=\"ios-arrow-down\"\n                ></ion-icon>\n              </p>\n            </ion-label>\n\n            <ion-label>\n              <p>\n                Ordem\n                <ion-icon\n                  class=\"dropdown-icon\"\n                  name=\"ios-arrow-down\"\n                ></ion-icon>\n              </p>\n            </ion-label>\n\n            <ion-label>\n              <p>\n                Tipo\n                <ion-icon\n                  class=\"dropdown-icon\"\n                  name=\"ios-arrow-down\"\n                ></ion-icon>\n              </p>\n            </ion-label>\n\n            <ion-label>\n              <p>\n                Nome\n                <ion-icon\n                  class=\"dropdown-icon\"\n                  name=\"ios-arrow-down\"\n                ></ion-icon>\n              </p>\n            </ion-label>\n\n            <ion-label>\n              <p>\n                Unidade\n                <ion-icon\n                  class=\"dropdown-icon\"\n                  name=\"ios-arrow-down\"\n                ></ion-icon>\n              </p>\n            </ion-label>\n\n            <ion-label>\n              <p>\n                Vídeo Link\n                <ion-icon\n                  class=\"dropdown-icon\"\n                  name=\"ios-arrow-down\"\n                ></ion-icon>\n              </p>\n            </ion-label>\n          </ion-item>\n\n          <ion-item lines=\"none\" *ngFor=\"let i of [0,1]\">\n            <ion-button\n              style=\"margin: 0px 8px 0px 8px\"\n              fill=\"clear\"\n              color=\"secondary\"\n              slot=\"start\"\n            >\n              <ion-icon name=\"md-create\"></ion-icon>\n            </ion-button>\n\n            <ion-button\n              style=\"margin: 0px 8px 0px 8px\"\n              fill=\"clear\"\n              color=\"secondary\"\n              slot=\"start\"\n            >\n              <ion-icon name=\"trash\"></ion-icon>\n            </ion-button>\n\n            <ion-label>\n              <p>Categoria</p>\n            </ion-label>\n\n            <ion-label>\n              <p>Patologia</p>\n            </ion-label>\n\n            <ion-label>\n              <p>Ordem</p>\n            </ion-label>\n\n            <ion-label>\n              <p>Conteúdos</p>\n            </ion-label>\n\n            <ion-label>\n              <p>Tratamentos</p>\n            </ion-label>\n\n            <ion-label>\n              <p>Alimentação</p>\n            </ion-label>\n\n            <ion-label>\n              <p>Exercícios</p>\n            </ion-label>\n          </ion-item>\n        </ion-list>\n      </ion-card>\n      -->\n    </div>\n\n    <!-- Formularios -->\n    <div *ngIf=\"tab =='forms'\">\n      <ion-grid class=\"ion-no-padding\">\n        <ion-row class=\"sub-toolbar\">\n          <ion-col size=\"8\">\n            <h1>GESTÃO DE FORMULÁRIOS</h1>\n            <p>\n              Você é o cientista que define padrões para cuidar de vidas.\n              Obrigado!\n            </p>\n          </ion-col>\n\n          <ion-col size=\"4\">\n            <ion-item lines=\"none\" class=\"search-bar\">\n              <ion-input\n                class=\"search-input\"\n                type=\"text\"\n                placeholder=\"Pesquise um formulário ou item...\"\n              >\n                <ion-icon\n                  class=\"searchbar-icon\"\n                  ios=\"ios-search\"\n                  md=\"md-search\"\n                ></ion-icon>\n              </ion-input>\n            </ion-item>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n\n      <ion-list *ngIf=\"allFilters\">\n        <ion-card\n          class=\"data-card\"\n          *ngFor=\"let item of allFilters; let i = index\"\n        >\n          <ion-item class=\"ion-hide-sm-down\">\n            <ion-label>\n              <p>{{item.titles?.nform}}</p>\n              <p><b>{{item?.formularios[0]?.nform}}</b></p>\n            </ion-label>\n            <ion-label>\n              <p>{{item.titles?.formulario}}</p>\n              <p><b>{{item.formularios[0]?.form}}</b></p>\n            </ion-label>\n            <ion-label>\n              <p>{{item.titles.nivel}}</p>\n              <p>\n                <b\n                  >{{item.formularios[0]?.nivel?item.formularios[0]?.nivel:'N/A'}}</b\n                >\n              </p>\n            </ion-label>\n            <ion-label>\n              <p>{{item.titles.fordem}}</p>\n              <p>\n                <b\n                  >{{item.formularios[0]?.fordem?item.formularios[0]?.fordem:'N/A'}}</b\n                >\n              </p>\n            </ion-label>\n            <!--\n                    <ion-label>\n\n           <p>Editar Formulário </p>\n              <ion-icon\n              name=\"create-outline\"\n              style=\"font-size: x-large; margin-left: 15%; cursor: pointer;color: #EF9E95;\"\n              (click)=\"edit_multiple(item)\"\n\n            ></ion-icon>\n            </ion-label>\n            <ion-label>\n              <p>Excluir Formulário </p>\n                 <ion-icon\n                 name=\"close-outline\"\n                 style=\"font-size: x-large; margin-left: 15%; cursor: pointer;color: #EF9E95;\"\n                 (click)=\"del_multiple(item)\"\n\n               ></ion-icon>\n               </ion-label>\n              -->\n          </ion-item>\n\n          <ion-item class=\"ion-hide-sm-up\">\n            <ion-label>\n              <!--\n          <p style=\"display: flex;\">Excluir Formulário     <ion-icon\n                name=\"close-outline\"\n                style=\"font-size: x-large; margin-left: auto; cursor: pointer;color: #EF9E95;\"\n                (click)=\"del_multiple(item)\"\n\n              ></ion-icon></p>\n              <p style=\"display: flex;\">Editar Formulário     <ion-icon\n                name=\"create-outline\"\n                style=\"font-size: x-large; margin-left: auto; cursor: pointer;color: #EF9E95;\"\n                (click)=\"edit_multiple(item)\"\n\n              ></ion-icon></p>\n              -->\n\n              <p>\n                {{item.titles?.nform}}: <b>{{item?.formularios[0]?.nform}}</b>\n              </p>\n              <p>\n                {{item.titles?.formulario}}:\n                <b>{{item.formularios[0]?.form}}</b>\n              </p>\n              <p>\n                {{item.titles.nivel}}:\n                <b\n                  >{{item.formularios[0]?.nivel?item.formularios[0]?.nivel:'N/A'}}</b\n                >\n              </p>\n              <p>\n                {{item.titles.fordem}}:\n                <b\n                  >{{item.formularios[0]?.fordem?item.formularios[0]?.fordem:'N/A'}}</b\n                >\n              </p>\n            </ion-label>\n          </ion-item>\n\n          <ion-grid fixed>\n            <ion-row>\n              <ion-col\n                size=\"12\"\n                style=\"cursor: pointer\"\n                (click)=\"queryFormIndex(item,i)\"\n              >\n                <ion-label class=\"ion-margin-start\">\n                  <ion-icon\n                    [name]=\"item.show? 'caret-down-outline':'caret-forward-outline'\"\n                    style=\"margin-right: 10px\"\n                  ></ion-icon>\n                  Ver Questões ({{item.questoes?.length?\n                  item.questoes?.length:0}})</ion-label\n                >\n              </ion-col>\n            </ion-row>\n\n            <div\n              *ngIf=\"item.questoes?.length\"\n              class=\"question-div\"\n              [class.opened]=\"item.show\"\n            >\n              <ion-row *ngFor=\"let questao of item.questoes;let i = index\">\n                <ion-col size=\"12\">\n                  <ion-item\n                    lines=\"none\"\n                    class=\"ion-hide-sm-down\"\n                    [ngClass]=\"{'item-bg-dark': 0 === i % 2}\"\n                  >\n                    <ion-label style=\"max-width: 80px\">\n                      <p>Editar</p>\n                      <ion-icon\n                        name=\"create-outline\"\n                        style=\"font-size: large; color: #ef9e95\"\n                        (click)=\"edit_multiple(item,i)\"\n                      ></ion-icon\n                    ></ion-label>\n                    <ion-label style=\"max-width: 80px\">\n                      <p>Excluir</p>\n                      <ion-icon\n                        name=\"close-outline\"\n                        style=\"font-size: large; color: #ef9e95\"\n                        (click)=\"del_multiple(item,i)\"\n                      ></ion-icon\n                    ></ion-label>\n                    <ion-label style=\"min-width: 400px\">\n                      <p>\n                        {{item.titles.pergunta}}: <b>{{questao.pergunta}}</b>\n                      </p>\n                      <p>\n                        {{item.titles.category}}: <b>{{questao.category}}</b>\n                      </p>\n                    </ion-label>\n                    <ion-label>\n                      <p>{{item.titles.ordem}}: <b>{{questao.ordem}}</b></p>\n                      <p>\n                        {{item.titles.tipo}}: <b>{{questao.tipo}}</b>\n                      </p></ion-label\n                    >\n\n                    <ion-label>\n                      <p>\n                        {{item.titles.parametro}}: <b>{{questao.parametro}}</b>\n                      </p>\n                      <p>\n                        <b></b></p\n                    ></ion-label> </ion-item\n                  ><ion-item\n                    lines=\"none\"\n                    class=\"ion-hide-sm-up\"\n                    [ngClass]=\"{'item-bg-dark': 0 === i % 2}\"\n                  >\n                    <ion-label>\n                      <p style=\"display: flex\">\n                        Excluir Questão\n                        <ion-icon\n                          name=\"close-outline\"\n                          style=\"\n                            font-size: large;\n                            margin-left: auto;\n                            color: #ef9e95;\n                          \"\n                          (click)=\"del_multiple(item,i)\"\n                        ></ion-icon>\n                      </p>\n                      <p style=\"display: flex\">\n                        Editar Questão\n                        <ion-icon\n                          name=\"create-outline\"\n                          style=\"\n                            font-size: large;\n                            margin-left: auto;\n                            color: #ef9e95;\n                          \"\n                          (click)=\"edit_multiple(item,i)\"\n                        ></ion-icon>\n                      </p>\n\n                      <p>\n                        {{item.titles.pergunta}}: <b>{{questao.pergunta}}</b>\n                      </p>\n                      <p>\n                        {{item.titles.category}}: <b>{{questao.category}}</b>\n                      </p>\n                      <p>{{item.titles.ordem}}: <b>{{questao.ordem}}</b></p>\n                      <p>{{item.titles.tipo}}: <b>{{questao.tipo}}</b></p>\n                      <p>\n                        {{item.titles.parametro}}: <b>{{questao.parametro}}</b>\n                      </p>\n                    </ion-label>\n                  </ion-item>\n                </ion-col>\n              </ion-row>\n            </div>\n          </ion-grid>\n        </ion-card>\n\n        <!--\n<ion-item lines=\"none\">\n            <ion-label>\n              <h2><strong>Input</strong></h2>\n            </ion-label>\n          </ion-item>\n\n          <ion-item lines=\"none\" class=\"item-bg-dark\">\n            <div style=\"width: 85px\"></div>\n            <ion-label  >\n              <p>{{allFilters[0]?.titles.category}} <ion-icon class=\"dropdown-icon\" name=\"ios-arrow-down\"></ion-icon>\n              </p>\n            </ion-label>\n\n            <ion-label>\n              <p>{{allFilters[0]?.titles.formulario}} <ion-icon class=\"dropdown-icon\" name=\"ios-arrow-down\"></ion-icon>\n              </p>\n            </ion-label>\n\n            <ion-label>\n              <p>{{allFilters[0]?.titles.tipo}} <ion-icon class=\"dropdown-icon\" name=\"ios-arrow-down\"></ion-icon>\n              </p>\n            </ion-label>\n\n            <ion-label>\n              <p>{{allFilters[0]?.titles.parametro}} <ion-icon class=\"dropdown-icon\" name=\"ios-arrow-down\"></ion-icon>\n              </p>\n            </ion-label>\n\n            <ion-label>\n              <p>{{allFilters[0]?.titles.ordem}} <ion-icon class=\"dropdown-icon\" name=\"ios-arrow-down\"></ion-icon>\n              </p>\n            </ion-label>\n\n            <ion-label>\n              <p>Questão <ion-icon class=\"dropdown-icon\" name=\"ios-arrow-down\"></ion-icon>\n              </p>\n            </ion-label>\n          </ion-item>\n\n\n          <ion-item lines=\"none\" *ngFor=\"let item of allFilters; let i = index\"\n            [ngClass]=\"{'item-bg-dark': 1 === i % 2}\">\n            <ion-button (click)=\"edit_multiple(item)\" style=\"margin: 0px 8px 0px 8px;\" fill=\"clear\" color=\"secondary\" slot=\"start\">\n              <ion-icon name=\"create\"></ion-icon>\n            </ion-button>\n\n            <ion-button (click)=\"del_multiple(item)\" style=\"margin: 0px 8px 0px 8px;\" fill=\"clear\" color=\"secondary\" slot=\"start\">\n              <ion-icon name=\"trash\"></ion-icon>\n            </ion-button>\n\n            <ion-label>\n              <p>{{item.formularios[0].nform}}</p>\n            </ion-label>\n\n            <ion-label>\n              <p>{{item.formulario}}</p>\n            </ion-label>\n\n            <ion-label>\n              <p>{{item.tipo}}</p>\n            </ion-label>\n\n            <ion-label>\n              <p>{{item.parametro}}</p>\n            </ion-label>\n\n            <ion-label>\n              <p>{{item.ordem}}</p>\n            </ion-label>\n\n            <ion-label class=\"ion-text-wrap\">\n              <p>{{item.pergunta}}</p>\n            </ion-label>\n          </ion-item>\n          -->\n      </ion-list>\n    </div>\n    <!-- End Formularios -->\n\n    <!-- Status -->\n    <div *ngIf=\"tab =='status'\">\n      <ion-grid class=\"ion-no-padding\">\n        <ion-row class=\"sub-toolbar\">\n          <ion-col size=\"8\">\n            <h1>GESTÃO DE STATUS</h1>\n            <p>\n              Você é o cientista que define padrões para cuidar de vidas.\n              Obrigado!\n            </p>\n          </ion-col>\n\n          <ion-col size=\"4\">\n            <ion-item lines=\"none\" class=\"search-bar\">\n              <ion-input\n                class=\"search-input\"\n                type=\"text\"\n                placeholder=\"Pesquise uma patologia ou biomarcador...\"\n              >\n                <ion-icon\n                  class=\"searchbar-icon\"\n                  ios=\"ios-search\"\n                  md=\"md-search\"\n                ></ion-icon>\n              </ion-input>\n            </ion-item>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n\n      <ion-card class=\"data-card\">\n        <ion-grid style=\"padding: 0px\">\n          <ion-row class=\"ion-hide-sm-down\">\n            <ion-col size=\"6\">\n              <ion-item lines=\"none\">\n                <ion-label>\n                  <h2><strong>Data processing</strong></h2>\n                </ion-label>\n              </ion-item>\n              <ion-list *ngIf=\"allFilters\">\n                <ion-card\n                  class=\"data-card\"\n                  *ngFor=\"let item of allFilters; let i = index\"\n                >\n                  <ion-item>\n                    <ion-label>\n                      <p>\n                        {{item.Titles?.category}}:\n                        <b>{{item?.Status[0]?.category}}</b>\n                      </p>\n\n                      <p>\n                        {{item.Titles?.calc}}:\n                        <b>{{item?.Status[0]?.calc}}</b>\n                      </p>\n\n                      <p>\n                        {{item.Titles?.cid}}: <b>{{item.Status[0]?.cid}}</b>\n                      </p>\n                      <p>\n                        {{item.Titles?.form}}\n                        <b\n                          >{{item.Status[0]?.form?item.Status[0]?.form:'N/A'}}</b\n                        >\n                      </p>\n                      <p>\n                        {{item.Titles.parametro}}:\n                        <b\n                          >{{item.Status[0]?.parametro?\n                          item.Status[0]?.parametro:'N/A'}}</b\n                        >\n                      </p>\n                      <p>\n                        {{item.Titles.patolog}}:\n                        <b\n                          >{{item.Status[0]?.patolog?\n                          item.Status[0]?.patolog:'N/A'}}</b\n                        >\n                      </p>\n                      <p>\n                        {{item.Titles.type}}:\n                        <b\n                          >{{item.Status[0]?.typo?\n                          item.Status[0]?.typo:'N/A'}}</b\n                        >\n                      </p>\n                    </ion-label>\n                  </ion-item>\n                </ion-card>\n              </ion-list>\n            </ion-col>\n            <ion-col size=\"6\">\n              <ion-item lines=\"none\">\n                <ion-label>\n                  <h2><strong>Biomarcadores</strong></h2>\n                </ion-label>\n              </ion-item>\n              <ion-list *ngIf=\"status_biomark\">\n                <ion-card\n                  class=\"data-card\"\n                  *ngFor=\"let item of status_biomark; let i = index\"\n                >\n                  <ion-item>\n                    <ion-label>\n                      <p>\n                        {{item.Titles?.biomark}}:\n                        <b>{{item?.Status[0]?.biomark}}</b>\n                      </p>\n\n                      <p>\n                        {{item.Titles?.category}}:\n                        <b>{{item.Status[0]?.category}}</b>\n                      </p>\n                      <p>\n                        {{item.Titles?.cid}}\n                        <b>{{item.Status[0]?.cid?item.Status[0]?.cid:'N/A'}}</b>\n                      </p>\n                      <p>\n                        {{item.Titles.status}}:\n                        <b\n                          >{{item.Status[0]?.status?\n                          item.Status[0]?.status:'N/A'}}</b\n                        >\n                      </p>\n                      <p>\n                        {{item.Titles.imgref}}:\n                        <b\n                          >{{item.Status[0]?.imgref?\n                          item.Status[0]?.imgref:'N/A'}}</b\n                        >\n                      </p>\n                      <p>\n                        {{item.Titles?.ref1}}:\n                        <b\n                          >{{item.Status[0]?.ref1?\n                          item.Status[0]?.ref1:'N/A'}}</b\n                        >\n                      </p>\n                      <p>\n                        {{item.Titles.ref2}}:\n                        <b\n                          >{{item.Status[0]?.ref2?\n                          item.Status[0]?.ref2:'N/A'}}</b\n                        >\n                      </p>\n                      <p>\n                        {{item.Titles.ref3}}:\n                        <b\n                          >{{item.Status[0]?.ref3?\n                          item.Status[0]?.ref3:'N/A'}}</b\n                        >\n                      </p>\n                      <p>\n                        {{item.Titles.ref4}}:\n                        <b\n                          >{{item.Status[0]?.ref4?\n                          item.Status[0]?.ref4:'N/A'}}</b\n                        >\n                      </p>\n                      <p>\n                        {{item.Titles.ref5}}:\n                        <b\n                          >{{item.Status[0]?.ref5?\n                          item.Status[0]?.ref5:'N/A'}}</b\n                        >\n                      </p>\n                    </ion-label>\n                  </ion-item>\n                </ion-card>\n              </ion-list>\n            </ion-col>\n          </ion-row>\n\n          <ion-row class=\"ion-hide-sm-up\">\n            <ion-col size=\"12\">\n              <ion-item lines=\"none\">\n                <ion-label>\n                  <h2><strong>Data processing</strong></h2>\n                </ion-label>\n              </ion-item>\n              <ion-list *ngIf=\"allFilters\">\n                <ion-card\n                  class=\"data-card\"\n                  *ngFor=\"let item of allFilters; let i = index\"\n                >\n                  <ion-item>\n                    <ion-label>\n                      <p>\n                        {{item.Titles?.category}}:\n                        <b>{{item?.Status[0]?.category}}</b>\n                      </p>\n\n                      <p>\n                        {{item.Titles?.cid}}: <b>{{item.Status[0]?.cid}}</b>\n                      </p>\n                      <p>\n                        {{item.Titles?.form}}\n                        <b\n                          >{{item.Status[0]?.form?item.Status[0]?.form:'N/A'}}</b\n                        >\n                      </p>\n                      <p>\n                        {{item.Titles.parametro}}:\n                        <b\n                          >{{item.Status[0]?.parametro?\n                          item.Status[0]?.parametro:'N/A'}}</b\n                        >\n                      </p>\n                      <p>\n                        {{item.Titles.patolog}}:\n                        <b\n                          >{{item.Status[0]?.patolog?\n                          item.Status[0]?.patolog:'N/A'}}</b\n                        >\n                      </p>\n                      <p>\n                        {{item.Titles.typo}}:\n                        <b\n                          >{{item.Status[0]?.typo?\n                          item.Status[0]?.typo:'N/A'}}</b\n                        >\n                      </p>\n                    </ion-label>\n                  </ion-item>\n                </ion-card>\n              </ion-list>\n            </ion-col>\n            <ion-col size=\"12\">\n              <ion-item lines=\"none\">\n                <ion-label>\n                  <h2><strong>Biomarcadores</strong></h2>\n                </ion-label>\n              </ion-item>\n              <ion-list *ngIf=\"status_biomark\">\n                <ion-card\n                  class=\"data-card\"\n                  *ngFor=\"let item of status_biomark; let i = index\"\n                >\n                  <ion-item>\n                    <ion-label>\n                      <p>\n                        {{item.Titles?.biomark}}:\n                        <b>{{item?.Status[0]?.biomark}}</b>\n                      </p>\n\n                      <p>\n                        {{item.Titles?.category}}:\n                        <b>{{item.Status[0]?.category}}</b>\n                      </p>\n                      <p>\n                        {{item.Titles?.cid}}\n                        <b>{{item.Status[0]?.cid?item.Status[0]?.cid:'N/A'}}</b>\n                      </p>\n                      <p>\n                        {{item.Titles.status}}:\n                        <b\n                          >{{item.Status[0]?.status?\n                          item.Status[0]?.status:'N/A'}}</b\n                        >\n                      </p>\n                      <p>\n                        {{item.Titles.imgref}}:\n                        <b\n                          >{{item.Status[0]?.imgref?\n                          item.Status[0]?.imgref:'N/A'}}</b\n                        >\n                      </p>\n                      <p>\n                        {{item.Titles?.ref1}}:\n                        <b\n                          >{{item.Status[0]?.ref1?\n                          item.Status[0]?.ref1:'N/A'}}</b\n                        >\n                      </p>\n                      <p>\n                        {{item.Titles.ref2}}:\n                        <b\n                          >{{item.Status[0]?.ref2?\n                          item.Status[0]?.ref2:'N/A'}}</b\n                        >\n                      </p>\n                      <p>\n                        {{item.Titles.ref3}}:\n                        <b\n                          >{{item.Status[0]?.ref3?\n                          item.Status[0]?.ref3:'N/A'}}</b\n                        >\n                      </p>\n                      <p>\n                        {{item.Titles.ref4}}:\n                        <b\n                          >{{item.Status[0]?.ref4?\n                          item.Status[0]?.ref4:'N/A'}}</b\n                        >\n                      </p>\n                      <p>\n                        {{item.Titles.ref5}}:\n                        <b\n                          >{{item.Status[0]?.ref5?\n                          item.Status[0]?.ref5:'N/A'}}</b\n                        >\n                      </p>\n                    </ion-label>\n                  </ion-item>\n                </ion-card>\n              </ion-list>\n            </ion-col>\n          </ion-row>\n\n          <!--\n <ion-row>\n            <ion-col size=\"6\" style=\"padding: 0px\">\n              <ion-row class=\"item-bg-dark\">\n                <ion-col size=\"0.5\"> </ion-col>\n\n                <ion-col size=\"1.5\" class=\"col-style\">\n                  <ion-label>\n                    <p><strong>Nome</strong></p>\n                  </ion-label>\n                </ion-col>\n\n                <ion-col size=\"1.5\" class=\"col-style\">\n                  <ion-label>\n                    <p><strong>Categoria</strong></p>\n                  </ion-label>\n                </ion-col>\n\n                <ion-col size=\"1.5\" class=\"col-style\">\n                  <ion-label>\n                    <p><strong>Código</strong></p>\n                  </ion-label>\n                </ion-col>\n\n                <ion-col size=\"2\" class=\"col-style\">\n                  <ion-label>\n                    <p><strong>Tipo</strong></p>\n                  </ion-label>\n                </ion-col>\n\n                <ion-col size=\"2.5\" class=\"col-style\">\n                  <ion-label>\n                    <p><strong>Formulário</strong></p>\n                  </ion-label>\n                </ion-col>\n\n                <ion-col size=\"2.5\" class=\"col-style\">\n                  <ion-label>\n                    <p><strong>Parâmetro</strong></p>\n                  </ion-label>\n                </ion-col>\n              </ion-row>\n\n              <ion-row\n                *ngFor=\"let item of allFilters; let i = index\"\n                [ngClass]=\"{'item-bg-dark': 1 === i % 2}\"\n              >\n                <ion-col size=\"0.5\">\n                  <ion-icon\n                    (click)=\"editStatus(item)\"\n                    style=\"padding: 2px\"\n                    color=\"secondary\"\n                    name=\"md-create\"\n                  >\n                  </ion-icon>\n                  <ion-icon\n                    (click)=\"delStatus()\"\n                    style=\"padding: 2px\"\n                    color=\"secondary\"\n                    name=\"trash\"\n                  ></ion-icon>\n                </ion-col>\n\n                <ion-col size=\"1.5\" class=\"col-style\">\n                  <ion-label>\n                    <p>{{item.nome}}</p>\n                  </ion-label>\n                </ion-col>\n\n                <ion-col size=\"1.5\" class=\"col-style\">\n                  <ion-label>\n                    <p>{{item.category}}</p>\n                  </ion-label>\n                </ion-col>\n\n                <ion-col size=\"1.5\" class=\"col-style\">\n                  <ion-label>\n                    <p>{{item.cid}}</p>\n                  </ion-label>\n                </ion-col>\n\n                <ion-col size=\"2\" class=\"col-style\">\n                  <ion-label>\n                    <p>{{item.type}}</p>\n                  </ion-label>\n                </ion-col>\n\n                <ion-col size=\"2.5\" class=\"col-style\">\n                  <ion-label>\n                    <p>{{item.form}}</p>\n                  </ion-label>\n                </ion-col>\n\n                <ion-col size=\"2.5\" class=\"col-style\">\n                  <ion-label>\n                    <p>{{item.patolog}}</p>\n                  </ion-label>\n                </ion-col>\n              </ion-row>\n            </ion-col>\n\n            <ion-col size=\"6\" style=\"padding: 0px\">\n              <ion-row class=\"item-bg-darker\">\n                <ion-col size=\"3\" class=\"col-style\">\n                  <ion-label>\n                    <p><strong>Exames lab.</strong></p>\n                  </ion-label>\n                </ion-col>\n\n                <ion-col size=\"3\" class=\"col-style\">\n                  <ion-label>\n                    <p><strong>Exames presenciais</strong></p>\n                  </ion-label>\n                </ion-col>\n\n                <ion-col size=\"3\" class=\"col-style\">\n                  <ion-label>\n                    <p><strong>Autoexames</strong></p>\n                  </ion-label>\n                </ion-col>\n\n                <ion-col size=\"3\" class=\"col-style\">\n                  <ion-label>\n                    <p><strong>Biossenssores</strong></p>\n                  </ion-label>\n                </ion-col>\n              </ion-row>\n\n              <ion-row\n                *ngFor=\"let item of status_biomark; let i = index\"\n                [ngClass]=\"{'item-bg-dark': 1 === i % 2}\"\n              >\n                <ion-col size=\"3\" class=\"col-style\">\n                  <ion-label>\n                    <p>\n                      <ion-icon color=\"secondary\" name=\"md-create\"></ion-icon>\n                      {{item?.labs}}\n                    </p>\n                    <br />\n                    <p>\n                      <ion-icon\n                        (click)=\"delBiomark('labs')\"\n                        color=\"secondary\"\n                        name=\"trash\"\n                      ></ion-icon>\n                    </p>\n                  </ion-label>\n                </ion-col>\n\n                <ion-col size=\"3\" class=\"col-style\">\n                  <ion-label>\n                    <p>\n                      <ion-icon color=\"secondary\" name=\"md-create\"></ion-icon>\n                      {{item?.exams}}\n                    </p>\n                    <br />\n                    <p>\n                      <ion-icon\n                        (click)=\"delBiomark('exams')\"\n                        color=\"secondary\"\n                        name=\"trash\"\n                      ></ion-icon>\n                    </p>\n                  </ion-label>\n                </ion-col>\n\n                <ion-col size=\"3\" class=\"col-style\">\n                  <ion-label>\n                    <p>\n                      <ion-icon color=\"secondary\" name=\"md-create\"></ion-icon>\n                      {{item?.autoexams}}\n                    </p>\n                    <br />\n                    <p>\n                      <ion-icon\n                        (click)=\"delBiomark('autoexams')\"\n                        color=\"secondary\"\n                        name=\"trash\"\n                      ></ion-icon>\n                    </p>\n                  </ion-label>\n                </ion-col>\n\n                <ion-col size=\"3\" class=\"col-style\">\n                  <ion-label>\n                    <p>\n                      <ion-icon color=\"secondary\" name=\"md-create\"></ion-icon>\n                      {{item?.biosens}}\n                    </p>\n                    <br />\n                    <p>\n                      <ion-icon\n                        (click)=\"delBiomark('biosens')\"\n                        color=\"secondary\"\n                        name=\"trash\"\n                      ></ion-icon>\n                    </p>\n                  </ion-label>\n                </ion-col>\n              </ion-row>\n            </ion-col>\n          </ion-row>\n\n          -->\n        </ion-grid>\n      </ion-card>\n    </div>\n    <!-- End Status -->\n  </div>\n</ion-content>\n","import { UtilService } from './../services/util/util.service';\nimport {\n  Component,\n  ElementRef,\n  OnInit,\n  QueryList,\n  ViewChildren,\n} from \"@angular/core\";\nimport {\n  NavController,\n  AlertController,\n  ModalController,\n  LoadingController,\n} from \"@ionic/angular\";\nimport { ApiService } from \"../services/api/api.service\";\nimport { FormModalPage } from \"../../app/form-modal/form-modal.page\";\n\n@Component({\n  selector: \"app-data\",\n  templateUrl: \"./data.page.html\",\n  styleUrls: [\"./data.page.scss\"],\n})\nexport class DataPage implements OnInit {\n  tab: string = \"forms\";\n  filterArray: any = [];\n  allFilters: any = [];\n  status_biomark: any = [];\n  filterInputs_alert = [];\n  moreOptions: boolean = true;\n\n  @ViewChildren(\"formIndex\") formIndex: QueryList<ElementRef>;\n  filterBiomark: any[];\n\n  constructor(\n    public api: ApiService,\n    public alertController: AlertController,\n    public modalController: ModalController,\n    public loadingController: LoadingController,\n    private util:UtilService\n  ) {}\n\n  ngOnInit() {}\n\n  ionViewDidEnter() {\n    this.loadForms();\n  }\n\n  ionViewDidLeave() {\n    this.allFilters = [];\n    this.filterArray = [];\n  }\n\n  segmentChange($event) {\n    if (this.tab == \"forms\") {\n      this.filterArray = [];\n      this.loadForms();\n    }\n\n    if (this.tab == \"status\") {\n      \n    this.presentLoading();\n      this.filterArray = [];\n      this.allFilters = [];\n      this.status_biomark = [];\n      this.filterArray = [\n        {\n          checked: true,\n          form: \"corpo\",\n          nform: \"Corpo\",\n        },\n        {\n          checked: true,\n          form: \"mente\",\n          nform: \"Mente\",\n        },\n        {\n          checked: true,\n          form: \"emocoes\",\n          nform: \"Emocoes\",\n        },\n      ];\n\n      this.filterBiomark = [\n        {\n          checked: true,\n          form: \"biosens\",\n        },\n        {\n          checked: true,\n          form: \"labs\",\n        },\n        {\n          checked: true,\n          form: \"exams\",\n        },\n        {\n          checked: true,\n          form: \"autoexams\",\n        },\n      ]\n\n      this.filterInputs_alert = [];\n      this.filterInputs_alert = this.fillAlertInputs();\n      console.log(this.filterArray)\n    \n      for (var i = 0; i < this.filterArray.length; i++) {\n        this.loadStatus(this.filterArray[i].form, this.filterArray[i].checked);\n      }\n\n      for (let i = 0; i < this.filterBiomark.length; i++) {\n        this.loadBiomarks(this.filterBiomark[i].form,this.filterBiomark[i].checked)\n        \n      }\n    }\n\n    if (this.tab == \"rec\") {\n      this.allFilters = [];\n      this.filterArray = [\n        {\n          checked: true,\n          form: \"treatm\",\n          title:'Tratamento'\n        },\n        {\n          checked: true,\n          form: \"food\",\n          title:'Alimentação'\n        },\n        {\n          checked: true,\n          form: \"content\",\n          title:'Satisfação'\n        },\n        {\n          checked: true,\n          form: \"activie\",\n          title:'Atividade'\n        },\n      ];\n\n      for (let i = 0; i < this.filterArray.length; i++) {\n       this.loadRecomen(this.filterArray[i].form, this.filterArray[i].checked);\n        \n      }\n    }\n  }\n\n  async loadForms() {\n    this.presentLoading();\n    this.allFilters = [];\n    this.filterArray = [];\n    this.api.get(\"forms\").then((res: any) => {\n      if (res) {\n        res.subscribe(\n          (data) => {\n            console.log(\"Forms API > \", data);\n            this.filterArray = data;\n\n            for (var i = 0; i < this.filterArray.length; i++) {\n              this.filterArray[i].checked = true;\n              if (this.tab == \"forms\") {\n                this.loadFormFilters(\n                  this.filterArray[i].form,\n                  this.filterArray[i].checked\n                );\n\n                if (i + 1 === this.filterArray.length) {\n                  setTimeout(() => {\n                    console.log(\"dismiss load forms\");\n                    this.loadingController\n                      .getTop()\n                      .then((v) =>\n                        v ? this.loadingController.dismiss() : null\n                      );\n                  }, 2000);\n                }\n              }\n/*\n              if (this.tab == \"rec\") {\n                this.loadRecomen(\n                  this.filterArray[i].form,\n                  this.filterArray[i].checked,\n                  i\n                );\n              }*/\n            }\n            this.filterInputs_alert = this.fillAlertInputs();\n          },\n          (err) => {\n            this.alertController.dismiss();\n            console.log(\"API error -> \", err);\n            this.api.proccessError(err);\n          }\n        );\n      }\n    });\n  }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      cssClass: \"my-custom-class\",\n      message: \"Aguarde...\",\n    });\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n    console.log(\"Loading dismissed!\");\n  }\n\n  async loadRecomen(form, checked, index?) {\n    console.log(form)\n    if (checked) {\n      this.api.get(\"recomen/\"+form).then((res: any) => {\n        if (res) {\n          res.subscribe(\n            (data) => {\n              console.log(\"Recomen API > \", data);\n              this.allFilters.push(data);\n\n              console.log(\"Recomen filter > \", this.allFilters);\n            },\n            (err) => {\n              console.log(\"API error -> \", err);\n              this.loadingController.dismiss();\n              this.api.proccessError(err);\n            }\n          );\n        }\n        (error) => {\n          console.log(\"API error -> \", error);\n          this.loadingController.dismiss();\n          this.api.proccessError(error);\n        };\n\n        if (index + 1 === this.filterArray.length) {\n          setTimeout(() => {\n            console.log(\"dismiss rec loader\");\n            this.loadingController\n              .getTop()\n              .then((v) => (v ? this.loadingController.dismiss() : null));\n          }, 2000);\n        }\n      });\n    }\n  }\n\n  async loadStatus(form, checked, index?) {\n   \n    if (checked) {\n      this.api.get(\"pato/status/\" + form).then((res: any) => {\n        if (res) {\n          res.subscribe(\n            (data) => {\n              console.log(\"Status API > \", data);\n              this.allFilters.push(data);\n              setTimeout(() => {\n                console.log(\"dismiss load forms\");\n                this.loadingController\n                  .getTop()\n                  .then((v) =>\n                    v ? this.loadingController.dismiss() : null\n                  );\n              }, 2000);\n            },\n            (err) => {\n              console.log(\"API error -> \", err);\n              this.api.proccessError(err);\n              setTimeout(() => {\n                console.log(\"dismiss load forms\");\n                this.loadingController\n                  .getTop()\n                  .then((v) =>\n                    v ? this.loadingController.dismiss() : null\n                  );\n              }, 2000);\n            }\n          );\n        }\n      });\n\n    }\n  }\n\n  async loadBiomarks(form, checked,){\n\n    if (checked) {\n      \n      this.api.get(\"biomark/\"+form).then((res: any) => {\n        if (res) {\n          res.subscribe(\n            (data) => {\n              console.log(\"Status biomark API > \", data);\n              this.status_biomark.push(data);\n            \n              \n              console.log(\"Status biomark filter > \", this.status_biomark);\n              this.loadingController\n                .getTop()\n                .then((v) => (v ? this.loadingController.dismiss() : null));\n            },\n            (err) => {\n              console.log(\"API error -> \", err);\n              this.api.proccessError(err);\n              setTimeout(() => {\n                console.log(\"dismiss load forms\");\n                this.loadingController\n                  .getTop()\n                  .then((v) =>\n                    v ? this.loadingController.dismiss() : null\n                  );\n              }, 2000);\n            }\n          );\n        }\n      });\n    }\n\n  }\n\n  async del_multiple(item,index) {\n    let fd = new FormData();\nconsole.log(\"delquest/\" + item.formularios[0].form + \"/\" + item.questoes[index].ordem)\n\n    const alert = await this.alertController.create({\n      header: `Deseja deletar a questão,${item.questoes[index].pergunta}`,\n      message: \"Digite 'Sim' para deletar a questão selecionada\",\n      inputs: [\n        {\n          name: 'inputOK',\n          type: 'text',\n          placeholder: \"Digite 'Sim' aqui.\"\n        },],\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: (blah) => {\n            console.log(\"Confirm Cancel: blah\");\n          },\n        },\n        {\n          text: \"Delete\",\n          handler: (value) => {\n            console.log(value.inputOK)\n\n            if (value.inputOK === 'Sim') {\n              fd.append(\"yes\", \"Sim\");\n              this.api\n              .post_params(\"delquest/\" + item.formularios[0].form + \"/\" + item.questoes[index].ordem, fd)\n              .then((res: any) => {\n                if (res) {\n                  res.subscribe(\n                    (data) => {\n                      console.log(\"Multiple del API > \", data);\n                      this.util.presentToast({ header: \"\", message: data });\n                      this.loadForms();\n                   \n                    },\n                    (err) => {\n                      console.log(\"API error -> \", err);\n                      this.api.proccessError(err);\n                    }\n                  );\n                }\n              });\n            } else {\n        return\n            }\n         \n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async delRec(item,index){\n\n    const alert = await this.alertController.create({\n      header: \"Are you sure\",\n      message: \"Are you sure, you want to delete this status\",\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: (blah) => {\n            console.log(\"Confirm Cancel: blah\");\n          },\n        },\n        {\n          text: \"Delete\",\n          handler: () => {\n            this.api.get(\"delpato\").then((res: any) => {\n              if (res) {\n                res.subscribe(\n                  (data) => {\n                    console.log(\"Status del API > \", data);\n                  },\n                  (err) => {\n                    console.log(\"API error -> \", err);\n                    this.api.proccessError(err);\n                  }\n                );\n              }\n            });\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n    \n  }\n\n\n  async delStatus() {\n    const alert = await this.alertController.create({\n      header: \"Are you sure\",\n      message: \"Are you sure, you want to delete this status\",\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: (blah) => {\n            console.log(\"Confirm Cancel: blah\");\n          },\n        },\n        {\n          text: \"Delete\",\n          handler: () => {\n            this.api.get(\"delpato\").then((res: any) => {\n              if (res) {\n                res.subscribe(\n                  (data) => {\n                    console.log(\"Status del API > \", data);\n                  },\n                  (err) => {\n                    console.log(\"API error -> \", err);\n                    this.api.proccessError(err);\n                  }\n                );\n              }\n            });\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async delBiomark(biomark) {\n    const alert = await this.alertController.create({\n      header: \"Are you sure\",\n      message: \"Are you sure, you want to delete this Biomark\",\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: (blah) => {\n            console.log(\"Confirm Cancel: blah\");\n          },\n        },\n        {\n          text: \"Delete\",\n          handler: () => {\n            this.api.post(\"delbiomark/\" + biomark).then((res: any) => {\n              if (res) {\n                res.subscribe(\n                  (data) => {\n                    console.log(\"Status Biomark del API > \", data);\n                  },\n                  (err) => {\n                    console.log(\"API error -> \", err);\n                    this.api.proccessError(err);\n                  }\n                );\n              }\n            });\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async loadFormFilters(form, checked) {\n    if (checked) {\n      this.api.get(\"forms/\" + form).then((res: any) => {\n        if (res) {\n          res.subscribe(\n            (data) => {\n              console.log(form + \" filter > \", data);\n\n              this.allFilters.push(data);\n\n              console.log(\"filter > \", this.allFilters);\n            },\n            (err) => {\n              this.loadingController.dismiss();\n              console.log(\"API error -> \", err);\n              this.api.proccessError(err);\n            }\n          );\n        }\n      });\n    }\n  }\n\n  queryFormIndex(item, index) {\n    const height = item.questoes.length * 75;\n    console.log(item);\n\n    if (item.show) {\n      item.show = false;\n    } else {\n      item.show = true;\n    }\n    console.log(item.show);\n  }\n\n  queryFormIndexRec(item, index) {\n    const height = item.status.length * 75;\n    console.log(item);\n\n    if (item.show) {\n      item.show = false;\n    } else {\n      item.show = true;\n    }\n    console.log(item.show);\n  }\n\n  fillAlertInputs() {\n    const theNewInputs = [];\n    for (let i = 0; i < this.filterArray.length; i++) {\n      theNewInputs.push({\n        type: \"checkbox\",\n        label: this.filterArray[i].nform,\n        value: this.filterArray[i],\n        checked: this.filterArray[i].checked,\n      });\n    }\n    return theNewInputs;\n  }\n\n  async openFilter() {\n    this.allFilters = [];\n    const alert = await this.alertController.create({\n      header: \"Filtros\",\n      inputs: this.filterInputs_alert,\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: () => {\n            console.log(\"Confirm Cancel\");\n          },\n        },\n        {\n          text: \"Ok\",\n          handler: (data) => {\n            console.log(\"Confirm Ok\", data);\n\n            let isMatch = false;\n            for (let i = 0; i < this.filterArray.length; i++) {\n              for (let j = 0; j < data.length; j++) {\n                if (data[j].form == this.filterArray[i].form) {\n                  isMatch = true;\n                  break;\n                } else {\n                  isMatch = false;\n                }\n              }\n\n              if (isMatch) {\n                // To make filter true again\n                if (this.filterArray[i].checked == false) {\n                  this.filterArray[i].checked = true;\n                }\n              } else {\n                this.filterArray[i].checked = false;\n                isMatch = false;\n              }\n            }\n            console.log(\"Filter array -> \", this.filterArray);\n\n            // Call to API according to selected filters\n            if (this.tab == \"forms\") {\n              this.allFilters = [];\n              for (var i = 0; i < this.filterArray.length; i++) {\n                this.loadFormFilters(\n                  this.filterArray[i].form,\n                  this.filterArray[i].checked\n                );\n              }\n            }\n\n            if (this.tab == \"status\") {\n              for (var i = 0; i < this.filterArray.length; i++) {\n                this.loadStatus(\n                  this.filterArray[i].form,\n                  this.filterArray[i].checked\n                );\n              }\n            }\n\n            if (this.tab == \"rec\") {\n              for (var i = 0; i < this.filterArray.length; i++) {\n   \n                this.loadRecomen(\n                  this.filterArray[i].form,\n                  this.filterArray[i].checked\n                );\n              }\n            }\n\n            // Filling alert array\n            this.filterInputs_alert = [];\n            this.filterInputs_alert = this.fillAlertInputs();\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async open_patologia() {\n    const modal = await this.modalController.create({\n      component: FormModalPage,\n      componentProps: {\n        form_type: \"patologia\",\n        title: \"Inserir novo Estado Clínico / Patologia\",\n      },\n    });\n    await modal.present();\n\n    const { data } = await modal.onWillDismiss();\n    console.log(\"patologia Modal Dismiss \", data);\n  }\n\n  async editStatus(item) {\n    const modal = await this.modalController.create({\n      component: FormModalPage,\n      componentProps: {\n        form_type: \"patologia\",\n        title: \"EEstado Clínico / Patologia\",\n        item: item,\n      },\n    });\n    await modal.present();\n\n    const { data } = await modal.onWillDismiss();\n    console.log(\"Edit patologia Modal Dismiss \", data);\n  }\n\n  async open_biomarcador() {\n    const modal = await this.modalController.create({\n      component: FormModalPage,\n      componentProps: {\n        form_type: \"biomark\",\n        title: \"Inserior novo Biomarcador\",\n      },\n    });\n    await modal.present();\n\n    const { data } = await modal.onWillDismiss();\n    console.log(\"biomark Modal Dismiss \", data);\n  }\n\n  async open_tratamento() {\n    const modal = await this.modalController.create({\n      component: FormModalPage,\n      componentProps: {\n        form_type: \"tratamento\",\n        title: \"Inserir novo Tratamento\",\n      },\n    });\n    await modal.present();\n\n    const { data } = await modal.onWillDismiss();\n    console.log(\"Tratamento Modal Dismiss \", data);\n  }\n\n  async open_content() {\n    const modal = await this.modalController.create({\n      component: FormModalPage,\n      componentProps: {\n        form_type: \"content\",\n        title: \"Inserir novo Conteúdo\",\n      },\n    });\n    await modal.present();\n\n    const { data } = await modal.onWillDismiss();\n    console.log(\"Content Modal Dismiss \", data);\n  }\n\n  async open_food() {\n    const modal = await this.modalController.create({\n      component: FormModalPage,\n      componentProps: {\n        form_type: \"food\",\n        title: \"Inserir nova Alimentação\",\n      },\n    });\n    await modal.present();\n\n    const { data } = await modal.onWillDismiss();\n    console.log(\"Food Modal Dismiss \", data);\n  }\n\n  async open_activity() {\n    const modal = await this.modalController.create({\n      component: FormModalPage,\n      componentProps: {\n        form_type: \"activity\",\n        title: \"Inserir nova Atividade\",\n      },\n    });\n    await modal.present();\n\n    const { data } = await modal.onWillDismiss();\n    console.log(\"Activity Modal Dismiss \", data);\n  }\n\n  async open_multiple() {\n    const modal = await this.modalController.create({\n      component: FormModalPage,\n      componentProps: {\n        form_type: \"multiple\",\n        title: \"Inserir Questão de Múltipla Escolha\",\n      },\n    });\n    await modal.present();\n\n    await modal.onWillDismiss().then((data) => {\n      if (data.data) {\n        this.loadForms();\n      } else {\n        return;\n      }\n      console.log(\"Edit multiple Modal Dismiss \", data);\n    });\n  }\n\n  async edit_multiple(item,index?) {\n    const modal = await this.modalController.create({\n      component: FormModalPage,\n      componentProps: {\n        form_type: \"multiple\",\n        title: \"Editar Questão de Múltipla Escolha\",\n        item: item,\n        index:index\n      },\n    });\n    await modal.present();\n\n    await modal.onWillDismiss().then((data) => {\n      if (data.data) {\n        this.loadForms();\n      } else {\n        return;\n      }\n\n      console.log(\"Edit multiple Modal Dismiss \", data);\n    });\n  }\n\n  async edit_Rec(item,index?){\n    const modal = await this.modalController.create({\n      component: FormModalPage,\n      componentProps: {\n        form_type: \"rec\",\n        title: \"Editar Recomendações\",\n        item: item,\n        index:index\n      },\n    });\n    await modal.present();\n\n    await modal.onWillDismiss().then((data) => {\n      if (data.data) {\n        this.loadForms();\n      } else {\n        return;\n      }\n\n      console.log(\"Edit multiple Modal Dismiss \", data);\n    });\n  }\n\n  async open_gestalt() {\n    const modal = await this.modalController.create({\n      component: FormModalPage,\n      componentProps: {\n        form_type: \"gestalt\",\n        title: \"Inserir Questão de Gestalt\",\n      },\n    });\n    await modal.present();\n\n    const { data } = await modal.onWillDismiss();\n    console.log(\"Gestalt Modal Dismiss \", data);\n  }\n\n  async open_binaria() {\n    const modal = await this.modalController.create({\n      component: FormModalPage,\n      componentProps: {\n        form_type: \"binaria\",\n        title: \"Inserir Questão de SIM ou NÃO\",\n      },\n    });\n    await modal.present();\n\n    const { data } = await modal.onWillDismiss();\n    console.log(\"Binaria Modal Dismiss \", data);\n  }\n\n  async open_levels() {\n    const modal = await this.modalController.create({\n      component: FormModalPage,\n      componentProps: {\n        form_type: \"levels\",\n        title: \"Inserir Questão de Níveis\",\n      },\n    });\n    await modal.present();\n\n    const { data } = await modal.onWillDismiss();\n    console.log(\"Level Modal Dismiss \", data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from \"../components/components.module\";\n\nimport { DataPage } from './data.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DataPage\n  }\n];\n\n@NgModule({\n  imports: [\n    ComponentsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [DataPage]\n})\nexport class DataPageModule {}\n","import { Component, OnChanges, OnInit } from \"@angular/core\";\nimport { ModalController } from \"@ionic/angular\";\nimport { StorageService } from \"../../services/storage/storage.service\";\nimport { UserDataComponent } from \"../user-data/user-data.component\";\n\n@Component({\n\tselector: \"app-user-bar\",\n\ttemplateUrl: \"./user-bar.component.html\",\n\tstyleUrls: [\"./user-bar.component.scss\"],\n})\nexport class UserBarComponent implements OnInit {\n\tuserData: any;\n\tconstructor(public storage: StorageService, public modalCtrl: ModalController) {\n\t\tthis.loadUserData();\n\t}\n\n\tngOnInit() {\n\t\t// this.loadUserData();\n\t\t// console.log(\"here\");\n\t}\n\n\tloadUserData() {\n\t\tlet interval = setInterval(() => {\n\t\t\tthis.storage\n\t\t\t\t.get(\"mia_user_data\")\n\t\t\t\t.then((user) => {\n\t\t\t\t\tthis.userData = user[0];\n\t\t\t\t\tconsole.log(\"user\", this.userData);\n\t\t\t\t\tif (user[0]) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tconsole.log(\"error while fetching User Data\");\n\t\t\t\t});\n\t\t}, 2000);\n\n\t\t// if (this.userData) {\n\t\t// \tconsole.log(\"here interval\");\n\t\t// \tclearInterval(interval);\n\t\t// }\n\t}\n\n\topenUserData() {\n\t\tthis.modalCtrl.create({ component: UserDataComponent }).then((userEl) => userEl.present());\n\t}\n}\n","<!-- <ion-item *ngIf=\"userData\" lines=\"none\" detail detailIcon=\"ios-arrow-down\" color=\"primary\">\n  <ion-label>\n    <h2>{{userData.nome}} {{userData.snome}}</h2>\n  </ion-label>\n\n  <ion-icon slot=\"end\" name=\"person\"></ion-icon>\n</ion-item> -->\n\n<div class=\"item-bg\" *ngIf=\"userData\">\n\t<ion-grid>\n\t\t<ion-row (click)=\"openUserData()\">\n\t\t\t<ion-col style=\"padding: 0px 10px 0px 0px\" size-md=\"4\" size-xs=\"4\" size-sm=\"4\" size-lg=\"4\">\n\t\t\t\t<p class=\"p-name\">{{ userData?.nome }} {{ userData?.snome }}</p>\n\t\t\t</ion-col>\n\n\t\t\t<ion-col\n\t\t\t\tstyle=\"padding: 0px 10px 0px 0px; text-align: center\"\n\t\t\t\tsize-md=\"4\"\n\t\t\t\tsize-xs=\"4\"\n\t\t\t\tsize-sm=\"4\"\n\t\t\t\tsize-lg=\"4\"\n\t\t\t>\n\t\t\t\t<img class=\"fingerprint-img\" src=\"../../assets/images/finger-print.png\" />\n\t\t\t</ion-col>\n\n\t\t\t<ion-col style=\"padding: 0px 10px 0px 0px\" size-md=\"4\" size-xs=\"4\" size-sm=\"4\" size-lg=\"4\">\n\t\t\t\t<img class=\"person-img\" src=\"../../assets/images/Avatar.png\" />\n\t\t\t</ion-col>\n\t\t</ion-row>\n\t</ion-grid>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { IonicModule } from \"@ionic/angular\";\nimport { UserBarComponent } from \"./user-bar/user-bar.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n@NgModule({\n\tdeclarations: [UserBarComponent],\n\timports: [IonicModule, CommonModule],\n\texports: [UserBarComponent],\n})\nexport class ComponentsModule {}\n"]}